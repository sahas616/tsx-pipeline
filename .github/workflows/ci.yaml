name: CI pipeline

on:
    push:
        branches:
            - main
        paths-ignore:
            - '**/k8s/*.yaml'

jobs:
    test:
        name: Unit Test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test

    lint:
        name: Static Code Analysis
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run lint
              run: npm run lint

    
    build:
        name: Build Code
        runs-on: ubuntu-latest
        needs: [test, lint]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build code
              run: npm run build

            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                name: build-artifact
                path: dist/

    docker:
        name: Docker Build and Push
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                name: build-artifact
                path: dist/

            - name: Set up Docker
              uses: docker/setup-buildx-action@v3

            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ GITHUB.ACTOR }}
                password: ${{ GITHUB.TOKEN }}

            - name: Build and Docker image
              uses: docker/build-push-action@v6
              with:
                context: .
                push: false
                file: ./Dockerfile
                tags: ghcr.io/${{ GITHUB.REPOSITORY }}:sha-${{ GITHUB.SHA }}

            - name: Run Trivy Scan
              uses: aquasecurity/trivy-action@0.28.0
              with:
                image-ref: "ghcr.io/${{ GITHUB.REPOSITORY }}:sha-${{ GITHUB.SHA }}"
                format: 'table'
                exit-code: '1'
                ignore-unfixed: true
                vuln-type: 'os,library'
                severity: 'CRITICAL,HIGH'

            - name: Push Docker Image
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: ghcr.io/${{ GITHUB.REPOSITORY }}:sha-${{ GITHUB.SHA }}

            
    update-k8s-manifest:
        name: Update Kubernetes Manifest
        runs-on: ubuntu-latest
        needs: [docker]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                token: ${{ secrets.TOKEN }}

            - name: Update K8s manifest
              run: 'sed -i "s|sha-[a-zA-Z0-9]*|sha-${{ GITHUB.SHA }}|" k8s/deployment.yaml'

            - name: Commit and Push to repo
              run: |
                git config --global user.email "souvik@example.com"
                git config --global user.name "Souvik Saha"
                git add k8s/deployment.yaml
                git commit -m "Update Git SHA id in K8s manifest"
                git push



        
        





        